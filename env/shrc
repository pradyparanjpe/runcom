# Walk upto mount-point (if within 16 levels) and look for
# '.venv' directory that contains python
# virtual environment. If found, switch to it
to_venv () {
    test_d="$(readlink -f "${PWD}")"
    parents=16  # path too long to waste time
    until mountpoint "${test_d}" > /dev/null 2> /dev/null; do
        if [ $parents -le 0 ]; then
            printf "Too many branch-nodes searched" >&2
            unset parents test_d env_d
            return 126
        fi
        for env_d in ".venv" "venv"; do
            if [ -d "${test_d}/${env_d}" ] \
                   || [ -L "${test_d}/${env_d}" ]; then
                # shellcheck disable=SC1090
                . "${test_d}/${env_d}/bin/activate"
                printf "Found %s, switching...\n" "${test_d}/${env_d}"
                unset parents test_d env_d
                return 0
            fi
        done
        test_d="$(dirname "${test_d}")"
        parents=$((parents - 1))
    done
    printf "Couldn't find .venv upto mountpoint %s\n" "${test_d}" >&2
    unset parents test_d env_d
    return 126
}

_rc_show_venv () {
    # if a virtualenv is active, print it's name
    if [ -n "${VIRTUAL_ENV}" ]; then
        base="$(basename "${VIRTUAL_ENV}")"
        if [ "${base}" = ".venv" ] || [ "${base}" = "venv"  ]; then
            printf "/%s" "$(basename "$(dirname "${VIRTUAL_ENV}")")"
            unset base
        else
            printf "/%s" "${base}"
            unset base
        fi
    fi
}
