# shellcheck shell=sh
# -*- coding:utf-8; mode:shell-script; -*-
#
# Copyright 2020, 2021 Pradyumna Paranjape
#
# This file is part of Prady_runcom.
#
# Prady_runcom is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Prady_runcom is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Prady_runcom.  If not, see <https://www.gnu.org/licenses/>.
#
#===================================================================
#  ___             _      ___                     _
# | _ \_ _ __ _ __| |_  _| _ \__ _ _ _ __ _ _ _  (_)_ __  ___
# |  _/ '_/ _` / _` | || |  _/ _` | '_/ _` | ' \ | | '_ \/ -_)
# |_| |_| \__,_\__,_|\_, |_| \__,_|_| \__,_|_||_|/ | .__/\___|
#                    |__/                      |__/|_|
#===================================================================

if [ ! -S "~/.ssh/ssh_auth_sock" ]; then
    eval "$(ssh-agent)"
    ln -sf "$SSH_AUTH_SOCK" ~/.ssh/ssh_auth_sock
fi
SSH_AUTH_SOCK=~/.ssh/ssh_auth_sock
export SSH_AUTH_SOCK
ssh-add -l > /dev/null || ssh-add

_common_exports() {
    if [ -z "$XDG_RUNTIME_DIR" ]; then
        XDG_RUNTIME_DIR="/run/user/$(id -u)"
    fi
    QT_PLUGIN_PATH="/usr/lib/kde4/plugins/"
    QT_AUTO_SCREEN_SCALE_FACTOR=0
    QT_QPA_PLATFORMTHEME="qt5ct"
    _JAVA_AWT_WM_NONREPARENTING=1

    export XDG_RUNTIME_DIR
    export QT_PLUGIN_PATH
    export QT_AUTO_SCREEN_SCALE_FACTOR
    export QT_QPA_PLATFORMTHEME
    export _JAVA_AWT_WM_NONREPARENTING
}
_exports_for_sway () {
    # export DISPLAY=":0"
    # export WAYLAND_DISPLAY=wayland-0
    # export GDK_BACKEND=wayland,x11
    _common_exports

    XDG_SESSION_TYPE="wayland"
    SDL_VIDEODRIVER="wayland"
    SWAYROOT="${XDG_CONFIG_HOME:-${HOME}/.config}/sway"
    ECORE_EVAS_ENGINE="wayland_egl"
    ELM_DISPLAY="wl"
    ELM_ENGINE="wayland_egl"
    ELM_ACCEL="opengl"
    QT_QPA_PLATFORM="wayland-egl;xcb"
    QT_WAYLAND_FORCE_DPI=100
    QT_WAYLAND_DISABLE_WINDOWDECORATION=1
    MOZ_ENABLE_WAYLAND=1

    export XDG_SESSION_TYPE
    export SDL_VIDEODRIVER
    export SWAYROOT
    export ECORE_EVAS_ENGINE
    export ELM_DISPLAY
    export ELM_ENGINE
    export ELM_ACCEL
    export QT_QPA_PLATFORM
    export QT_WAYLAND_FORCE_DPI
    export QT_WAYLAND_DISABLE_WINDOWDECORATION
    export MOZ_ENABLE_WAYLAND
}

_exports_for_x11 () {
    _common_exports

    XDG_SESSION_TYPE="x11"
    SDL_VIDEODRIVER="x11"
    I3ROOT="${XDG_CONFIG_HOME:-${HOME}/.config}/i3"

    export XDG_SESSION_TYPE
    export SDL_VIDEODRIVER
    export I3ROOT

    unset ECORE_EVAS_ENGINE
    unset ELM_DISPLAY
    unset ELM_ENGINE
    unset ELM_ACCEL
    unset QT_QPA_PLATFORM
    unset QT_WAYLAND_FORCE_DPI
    unset QT_WAYLAND_DISABLE_WINDOWDECORATION
    unset MOZ_ENABLE_WAYLAND
}
_select_x11_manager() {
    echo "Window managers:"
    ls "/usr/share/xsessions"
    read x11wm && echo "${x11wm}" > "${HOME}/.xinitrc" && unset x11wm
}

if [ "$(tty)" = "/dev/tty1" ]; then
    if builtin command -v sway 2>&1 > /dev/null; then
        if sway --validate; then
            _exports_for_sway
            exec dbus-launch --sh-syntax --exit-with-session sway
        else
            echo "Error while validating sway configuration"
        fi
    else
        _exports_for_x11
        _select_x11_manager
        exec startx
    fi
elif [ "$(tty)" = "/dev/tty2" ]; then
    _exports_for_x11
    _select_x11_manager
    exec startx
elif [ "$TERM" = "linux" ]; then
    printf "\e]P0000000" #black
    printf "\e]P83f3f3f" #darkgrey
    printf "\e]P19f3f3f" #darkred
    printf "\e]P9ff9f9f" #red
    printf "\e]P23f9f3f" #darkgreen
    printf "\e]PAbfefbf" #green
    printf "\e]P3bf9f3f" #brown
    printf "\e]PB9fff9f" #yellow
    printf "\e]P45f5f9f" #darkblue
    printf "\e]PC9f9fff" #blue
    printf "\e]P59f3f9f" #darkmagenta
    printf "\e]PDff9fff" #magenta
    printf "\e]P63f9f9f" #darkcyan
    printf "\e]PE9fffff" #cyan
    printf "\e]P7afafaf" #lightgrey
    printf "\e]PFffffff" #white
    clear #for background artifacting
fi
