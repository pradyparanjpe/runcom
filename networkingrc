#!/usr/bin/env bash
# -*- coding:utf-8; mode: shell-script -*-
#
# Copyright 2020 Pradyumna Paranjape
#
## Check for network connectivity at the beginning
# This file is part of Prady_runcom.
#
# Prady_runcom is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Prady_runcom is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Prady_runcom.  If not, see <https://www.gnu.org/licenses/>.

RUNCOMDIR="${HOME}/.runcom"
. ${RUNCOMDIR}/colorlibrc
. ${RUNCOMDIR}/netcheck.sh >/dev/null

netcode="$(${RUNCOMDIR}/netcheck.sh |cut  -f3)"

if [[ "$netcode" -gt 7 ]]; then
    echo -e "${BLUE_BOLD}Internet (GOOGLE) Connected${NO_EFFECTS}"
    echo -e "${GREEN}$ip_addr ${NO_EFFECTS} is current wireless ip address"
else
    echo -e "${RED_BOLD}Internet (GOOGLE) Not reachable${NO_EFFECTS}"
    if [[ $(( netcode % 8 )) -gt 3 ]]; then  # Intranet is connected
        echo -e "${RED}Internet Down${NO_EFFECTS}"
        case $(( netcode % 4 )) in
            2) echo -e "Home network connected,"
               ;;
            1) echo -e "CCMB network connected,"
               if [[ -f "${RUNCOM}/proxy_send.py" ]]; then
                   ${RUNCOM}/proxy_send.py \
                       && echo -e "${YELLOW}PROXY AUTH SENT${NO_EFFECTS}";
               fi
               ;;
            *) echo -e "HOTSPOT connected"
               ;;
        esac
    else
        echo -e "${YELLOW_BOLD}Network connection Disconnected${NO_EFFECTS}"
    fi
fi

# Reuse ssh agent for all logins
if [[ ! -S ~/.ssh/ssh_auth_sock ]]; then
    eval `ssh-agent`
    ln -sf "$SSH_AUTH_SOCK" ~/.ssh/ssh_auth_sock
fi
export SSH_AUTH_SOCK=~/.ssh/ssh_auth_sock
ssh-add -l > /dev/null || ssh-add

# Home Cloud mounts
if [[ $(( netcode % 4 )) -eq 2 ]]; then
    clouddir=( "/media/data" "/home/pradyumna" )
    srv_mnt_dir="${HOME}/www.anubandha.d"
    if [[ $(mount | grep -c "${srv_mnt_dir}") \
              -lt "${#clouddir[@]}" ]]; then
        # not mounted
        for pathloc in ${clouddir[@]}; do
            mntpath="${srv_mnt_dir}${pathloc}"
            mkdir -p "$mntpath"
            sshfs -o "reconnect,ServerAliveInterval=15,ServerAliveCountMax=3" \
                "pradyumna@www.anubandha.home:${pathloc}" "$mntpath"
        done
    fi
fi
