#!/usr/bin/env bash
#-*- coding:utf-8; mode:shell-script -*-
#
# Copyright 2020 Pradyumna Paranjape
#
# This file is part of Prady_runcom.
#
# Prady_runcom is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Prady_runcom is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Prady_runcom.  If not, see <https://www.gnu.org/licenses/>.

function git_status() {
  local modified=0
  local cached=0
  local untracked=0

  while read -r line; do
    if [ "$line" = '_?_?_' ]; then
      untracked=1
      continue
    fi

    if [[ "$line" =~ ^_[^[:space:]]_.?_ ]]; then
      cached=1
    fi

    if [[ "$line" =~ ^_._[^[:space:]]_ ]]; then
      modified=1
    fi
  done < <(git status --short | cut -b -2 | sed -e 's/\(.\)\(.*\)/_\1_\2_/')

  if [ $modified -ne 0 ]; then
    echo -ne "${RED}M"
  fi

  if [ $cached -ne 0 ]; then
    echo -ne "${GREEN}C"
  fi

  if [ $untracked -ne 0 ]; then
    echo -ne "${RED}?"
  fi

  if [ -n "$(git stash list)" ]; then
    echo -ne "${CYAN}S"
  fi
  echo -e "${NO_EFFECTS}"
}

function git_branch() {
  local branch
  branch="$(git branch 2>/dev/null | grep '^\*' | sed -e "s/^* //")"
  if [[ "${branch}" =~ ^bug- ]]; then
    echo -ne "${GREEN}"
  elif [[ "${branch}" =~ ^atc- ]]; then
    echo -ne "${CYAN}"
  elif [[ "${branch}" =~ ^tmp ]]; then
    echo -ne "${MAGRNTA}"
  elif [[ "${branch}" = "(detached from hde/master)" ]]; then
    echo -ne "${YELLOW}"
  elif [[ "${branch}" == "master" ]]; then
      return
  else
    echo -ne "${MAGENTA}"
  fi
  echo -n "${branch}"
  echo -e "${NO_EFFECTS}"
}

function git_hash() {
  git log --pretty=format:'%h' -n 1
}

function git_ps() {
  if ! git status --ignore-submodules &>/dev/null; then
    return
  else
      echo " $(git_branch)·$(git_hash)·$(git_status) "
  fi
}
